Timer unit: 1e-06 s

Total time: 0.393757 s
File: evolution-prof1.py
Function: similar_event at line 21

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    21                                           @profile
    22                                           def similar_event(word_vectors, source_idx, range_idx, threshold=0.85):
    23       297        165.0      0.6      0.0      similar_events = []
    24       297        307.0      1.0      0.1      source_vector = word_vectors[source_idx]
    25     23370       7524.0      0.3      1.9      for i in range(range_idx[0], range_idx[0]+range_idx[1]):
    26     23073     385324.0     16.7     97.9          if cossim(source_vector, word_vectors[i]) > threshold:
    27       625        364.0      0.6      0.1              similar_events.append(i)
    28       297         73.0      0.2      0.0      return similar_events

Total time: 0.00747 s
File: evolution-prof1.py
Function: grouping_events at line 30

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    30                                           @profile
    31                                           def grouping_events(events, word_vectors, threshold=0.8):
    32       297        147.0      0.5      2.0      results = []
    33       297         79.0      0.3      1.1      current_group = []
    34                                               
    35       922        486.0      0.5      6.5      for i, e in enumerate(events):
    36       625        264.0      0.4      3.5          current_group.append(events[i])
    37       625        286.0      0.5      3.8          if i == len(events)-1:
    38       297         98.0      0.3      1.3              results.append(current_group)
    39       297         80.0      0.3      1.1              current_group = []
    40                                                   else:        
    41       328       5663.0     17.3     75.8              if cossim(word_vectors[events[i]], word_vectors[events[i+1]]) > threshold:
    42        49         27.0      0.6      0.4                  current_group.append(events[i+1])
    43                                                       else:
    44       279        108.0      0.4      1.4                  results.append(current_group)
    45       279         76.0      0.3      1.0                  current_group = []
    46                                           
    47       297         89.0      0.3      1.2      if current_group:
    48                                                   results.append(current_group)
    49                                                   
    50       297         67.0      0.2      0.9      return results

Total time: 1.90284 s
File: evolution-prof1.py
Function: compute_instances_and_chains at line 52

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    52                                           @profile
    53                                           def compute_instances_and_chains(df, word_vectors, size=None, day_column="day_fixed", time_decay=30, 
    54                                                                            chain_threshold=0.8, grouping_threshold=0.87):
    55         1          0.0      0.0      0.0      all_events = []
    56         1          1.0      1.0      0.0      event_instances = []
    57         1          1.0      1.0      0.0      event_chains = []
    58                                               
    59         1          0.0      0.0      0.0      if size is None:
    60                                                   size = df.shape[0]
    61                                               
    62       501        225.0      0.4      0.0      for i in range(size):
    63       500        279.0      0.6      0.0          if i%1000 == 0:
    64         1         55.0     55.0      0.0              print("{}".format(i*100/df.shape[0]))
    65       500       1213.0      2.4      0.1          if i in all_events:
    66       203         71.0      0.3      0.0              continue
    67       297     102587.0    345.4      5.4          after_week = df.iloc[i][day_column] + pd.DateOffset(time_decay)
    68       297      78763.0    265.2      4.1          today = df.iloc[i][day_column]
    69       297    1298668.0   4372.6     68.2          len_data = df[today <= df[day_column]][df[day_column] <= after_week].shape[0]
    70       297     407167.0   1370.9     21.4          events = similar_event(word_vectors, i, (i, len_data), threshold=chain_threshold)
    71       297        158.0      0.5      0.0          if events == []:
    72                                                       continue
    73       297       9498.0     32.0      0.5          grouped_events = grouping_events(events, word_vectors, threshold=grouping_threshold)
    74       297        277.0      0.9      0.0          event_instances += grouped_events
    75       297        187.0      0.6      0.0          event_chains.append(events)
    76       297        124.0      0.4      0.0          all_events += events
    77       297       3566.0     12.0      0.2          all_events = list(set(all_events))
    78         1          1.0      1.0      0.0      return event_chains, event_instances

Total time: 2.05283 s
File: evolution-prof1.py
Function: regrouping at line 80

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    80                                           @profile
    81                                           def regrouping(grouped_events, word_vectors, threshold=0.87):
    82         1          0.0      0.0      0.0      results = []
    83         1          0.0      0.0      0.0      all_events = []
    84         1          0.0      0.0      0.0      current_group = []
    85       577        172.0      0.3      0.0      for i, ge1 in enumerate(grouped_events):
    86       576       1231.0      2.1      0.1          if i in all_events:
    87       170         56.0      0.3      0.0              continue
    88       406        149.0      0.4      0.0          current_group = []
    89       406        177.0      0.4      0.0          current_group += ge1
    90    126285      46935.0      0.4      2.3          for j, ge2 in enumerate(grouped_events[i+1:]):
    91    125879     216496.0      1.7     10.5              if i+j+1 in all_events:
    92     18922       4910.0      0.3      0.2                  continue
    93    106957    1782024.0     16.7     86.8              if cossim(word_vectors[ge1[0]], word_vectors[ge2[0]]) > threshold:
    94       170         78.0      0.5      0.0                  current_group += ge2
    95       170         95.0      0.6      0.0                  all_events += [i, i+j+1]
    96       406        508.0      1.3      0.0          results.append(list(set(current_group)))
    97         1          0.0      0.0      0.0      return results

Total time: 4.06743 s
File: evolution-prof1.py
Function: execute at line 99

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    99                                           @profile
   100                                           def execute(df, word_vectors, size=None, day_column="day_fixed", time_decay=14, 
   101                                                       chain_threshold=0.8, grouping_threshold=0.87, 
   102                                                       regrouping_threshold=0.87, regrouping_level=1):
   103                                           
   104         1          3.0      3.0      0.0      event_chains, grouped_events = compute_instances_and_chains(
   105         1    1905148.0 1905148.0     46.8          df, word_vectors, size, day_column, time_decay, chain_threshold, grouping_threshold)
   106                                           
   107         1          1.0      1.0      0.0      regrouped_events = grouped_events
   108         2          2.0      1.0      0.0      for i in range(regrouping_level):
   109         1    2162272.0 2162272.0     53.2          regrouped_events = regrouping(regrouped_events, word_vectors, regrouping_threshold)
   110                                               
   111         1          1.0      1.0      0.0      return event_chains, regrouped_events

